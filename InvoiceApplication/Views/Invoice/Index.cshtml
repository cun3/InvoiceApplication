@model PagedList.IPagedList<InvoiceApplication.Models.Invoice>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />


@{ var total = Model.Sum(a => a.totalPrice);}
@{ViewData["total"] = total;}
@{
    ViewBag.Title = "Invoice List";
}

<h2>Invoice List</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div>
    <table border="0" class="table" >

        <tr>
            <td>@Html.Label("Error Limit")</td>
            <td>@Html.TextBox("a", ViewData["MaxLimit"], new { @class = "form-control", id = "txtMaxLimit" })</td>
            <td></td>
            <td>@Html.Label(" Warning Limit")</td>
            <td>@Html.TextBox("b", ViewData["Warning"], new { @class = "form-control", id = "txtWarning" })</td>
            <td></td>
        </tr>

    </table>
</div>
<table class="table table-striped">

    <tr>
        <th>
            Customer Name
        </th>
        <th>
            Product Name
        </th>
        <th>
            Product Price
        </th>
        <th>
            Quantity
        </th>
        <th>
            Total Price
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Customer.customerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.productName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.totalPrice)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.invoiceId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.invoiceId })
            </td>
        </tr>

    }
    <tr>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td>
            @if (total != 0)
            {
                @total
            }
        </td>
        <td></td>
</tr>

</table>

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",new { page}))

@section scripts {
    <script>
        $('#txtMaxLimit').on('input',function(){
            $.ajax({
                type:"POST",
                url: '@Url.Action("StoreMaxLimitData", "Invoice")',
                data: { 'MaxLimit': $('#txtMaxLimit').val() }
            })
        })
        $('#txtWarning').on('input', function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("StoreWarningLimit", "Invoice")',
                data: { 'Warning': $('#txtWarning').val() }
            })
        })

    </script>
}